<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZfYWAAAAAElFTkSuQmCC
</value>
  </data>
</root>